[2021-07-27 16:32:43] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6367a688
[2021-07-27 16:32:43] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@357bc488
[2021-07-27 16:32:43] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@357bc488
[2021-07-27 16:32:43] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1af4955e
[2021-07-27 16:32:43] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1af4955e
[2021-07-27 16:32:43] - Adding type registration date -> org.hibernate.type.DateType@543d5863
[2021-07-27 16:32:43] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@543d5863
[2021-07-27 16:32:43] - Adding type registration time -> org.hibernate.type.TimeType@697d6ded
[2021-07-27 16:32:43] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@697d6ded
[2021-07-27 16:32:43] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f281aaf
[2021-07-27 16:32:43] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f281aaf
[2021-07-27 16:32:43] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f281aaf
[2021-07-27 16:32:43] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@24c685e7
[2021-07-27 16:32:43] - Adding type registration calendar -> org.hibernate.type.CalendarType@420a8042
[2021-07-27 16:32:43] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@420a8042
[2021-07-27 16:32:43] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@420a8042
[2021-07-27 16:32:43] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3dce6dd8
[2021-07-27 16:32:43] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1ad9b8d3
[2021-07-27 16:32:43] - Adding type registration locale -> org.hibernate.type.LocaleType@55acec99
[2021-07-27 16:32:43] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55acec99
[2021-07-27 16:32:43] - Adding type registration currency -> org.hibernate.type.CurrencyType@3f8dfe74
[2021-07-27 16:32:43] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f8dfe74
[2021-07-27 16:32:43] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@525b1b70
[2021-07-27 16:32:43] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@525b1b70
[2021-07-27 16:32:43] - Adding type registration class -> org.hibernate.type.ClassType@359066bc
[2021-07-27 16:32:43] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@359066bc
[2021-07-27 16:32:43] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b481bf5
[2021-07-27 16:32:43] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b481bf5
[2021-07-27 16:32:43] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@392781e
[2021-07-27 16:32:43] - Adding type registration binary -> org.hibernate.type.BinaryType@1b57c345
[2021-07-27 16:32:43] - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b57c345
[2021-07-27 16:32:43] - Adding type registration [B -> org.hibernate.type.BinaryType@1b57c345
[2021-07-27 16:32:43] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f79f192
[2021-07-27 16:32:43] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f79f192
[2021-07-27 16:32:43] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f79f192
[2021-07-27 16:32:43] - Adding type registration row_version -> org.hibernate.type.RowVersionType@6af5b246
[2021-07-27 16:32:43] - Adding type registration image -> org.hibernate.type.ImageType@2a4f8009
[2021-07-27 16:32:43] - Adding type registration characters -> org.hibernate.type.CharArrayType@2d7637e6
[2021-07-27 16:32:43] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d7637e6
[2021-07-27 16:32:43] - Adding type registration [C -> org.hibernate.type.CharArrayType@2d7637e6
[2021-07-27 16:32:43] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e900e1a
[2021-07-27 16:32:43] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e900e1a
[2021-07-27 16:32:43] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e900e1a
[2021-07-27 16:32:43] - Adding type registration text -> org.hibernate.type.TextType@63a9c661
[2021-07-27 16:32:43] - Adding type registration ntext -> org.hibernate.type.NTextType@160e99e0
[2021-07-27 16:32:43] - Adding type registration blob -> org.hibernate.type.BlobType@198536f6
[2021-07-27 16:32:43] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@198536f6
[2021-07-27 16:32:43] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c628f6a
[2021-07-27 16:32:43] - Adding type registration clob -> org.hibernate.type.ClobType@6f9ab79d
[2021-07-27 16:32:43] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f9ab79d
[2021-07-27 16:32:43] - Adding type registration nclob -> org.hibernate.type.NClobType@7bbcf6f0
[2021-07-27 16:32:43] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7bbcf6f0
[2021-07-27 16:32:43] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@36c7cbe1
[2021-07-27 16:32:43] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@715f45c6
[2021-07-27 16:32:43] - Adding type registration serializable -> org.hibernate.type.SerializableType@55c57422
[2021-07-27 16:32:43] - Adding type registration object -> org.hibernate.type.ObjectType@108e9837
[2021-07-27 16:32:43] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@108e9837
[2021-07-27 16:32:43] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2336cd91
[2021-07-27 16:32:43] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a944af9
[2021-07-27 16:32:43] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3593e074
[2021-07-27 16:32:43] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@79d14037
[2021-07-27 16:32:43] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c1e40d9
[2021-07-27 16:32:43] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4b50c21
[2021-07-27 16:32:43] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e0fdc83
[2021-07-27 16:32:43] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5dacf18d
[2021-07-27 16:32:43] - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6f52a229] into BootstrapContext; was [null]
[2021-07-27 16:32:43] - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6f52a229) [was null]
[2021-07-27 16:32:43] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3fe98084] into BootstrapContext; was [null]
[2021-07-27 16:32:43] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5f33e6d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@151a6598]
[2021-07-27 16:32:43] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6f52a229]
[2021-07-27 16:32:43] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6f52a229]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-07-27 16:32:43] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-07-27 16:32:43] - Creating new JDBC Driver Connection to [jdbc:h2:mem:06a8b6dc-593e-4000-bd1b-2c385d147255;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
[2021-07-27 16:32:43] - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-07-27 16:32:43] - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-07-27 16:32:43] - JDBC version : 4.1
[2021-07-27 16:32:43] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2021-07-27 16:32:43] - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-07-27 16:32:43] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-07-27 16:32:43] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2382b2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@13374ca6]
[2021-07-27 16:32:43] - Binding entity from annotated class: com.anu.springunijpa.entity.Course
[2021-07-27 16:32:43] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-07-27 16:32:43] - Import with entity name Course
[2021-07-27 16:32:43] - Bind entity com.anu.springunijpa.entity.Course on table course
[2021-07-27 16:32:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(course), mappingColumn=course_id, insertable=true, updatable=true, unique=false}
[2021-07-27 16:32:43] - Not known whether passed class name [com.anu.springunijpa.entity.Course] is safe
[2021-07-27 16:32:43] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.anu.springunijpa.entity.Course
[2021-07-27 16:32:43] - MetadataSourceProcessor property courseId with lazy=false
[2021-07-27 16:32:43] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.Course:courseId]
[2021-07-27 16:32:43] - building SimpleValue for courseId
[2021-07-27 16:32:43] - Building property courseId
[2021-07-27 16:32:43] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(course_id)]), courseId, assigned, , ...)
[2021-07-27 16:32:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(course), mappingColumn=course_leader, insertable=true, updatable=true, unique=false}
[2021-07-27 16:32:43] - MetadataSourceProcessor property courseLeader with lazy=false
[2021-07-27 16:32:43] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.Course:courseLeader]
[2021-07-27 16:32:43] - building SimpleValue for courseLeader
[2021-07-27 16:32:43] - Building property courseLeader
[2021-07-27 16:32:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(course), mappingColumn=course_name, insertable=true, updatable=true, unique=false}
[2021-07-27 16:32:43] - MetadataSourceProcessor property courseName with lazy=false
[2021-07-27 16:32:43] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.Course:courseName]
[2021-07-27 16:32:43] - building SimpleValue for courseName
[2021-07-27 16:32:43] - Building property courseName
[2021-07-27 16:32:43] - Binding entity from annotated class: com.anu.springunijpa.entity.User
[2021-07-27 16:32:43] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-07-27 16:32:43] - Import with entity name User
[2021-07-27 16:32:43] - Bind entity com.anu.springunijpa.entity.User on table user
[2021-07-27 16:32:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-07-27 16:32:43] - Not known whether passed class name [com.anu.springunijpa.entity.User] is safe
[2021-07-27 16:32:43] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.anu.springunijpa.entity.User
[2021-07-27 16:32:43] - MetadataSourceProcessor property userId with lazy=false
[2021-07-27 16:32:43] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.User:userId]
[2021-07-27 16:32:43] - building SimpleValue for userId
[2021-07-27 16:32:43] - Building property userId
[2021-07-27 16:32:43] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
[2021-07-27 16:32:43] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
