[2021-07-27 17:54:20] - Executing request. operation name: 'null'. query: 'query {
    findUser(userId:6){
        userId
        userName
        dOB
        userTel
    }
}'. variables '{}'
[2021-07-27 17:54:20] - Parsing query: 'query {
    findUser(userId:6){
        userId
        userName
        dOB
        userTel
    }
}'...
[2021-07-27 17:54:20] - Validating query: 'query {
    findUser(userId:6){
        userId
        userName
        dOB
        userTel
    }
}'
[2021-07-27 17:54:20] - Executing '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553'. operation name: 'null'. query: 'query {
    findUser(userId:6){
        userId
        userName
        dOB
        userTel
    }
}'. variables '{}'
[2021-07-27 17:54:20] - Executing '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' query operation: 'QUERY' using 'graphql.execution.AsyncExecutionStrategy' execution strategy
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' fetching field '/findUser' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-27 17:54:20] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
[2021-07-27 17:54:20] - Opened new EntityManager [SessionImpl(371974897<open>)] for JPA transaction
[2021-07-27 17:54:20] - Setting JDBC Connection [HikariProxyConnection@2082612594 wrapping com.mysql.cj.jdbc.ConnectionImpl@3a209918] read-only
[2021-07-27 17:54:20] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-07-27 17:54:20] - begin
[2021-07-27 17:54:20] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@108239a6]
[2021-07-27 17:54:20] - select user0_.user_id as user_id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.user_name as user_nam3_1_0_, user0_.user_tel as user_tel4_1_0_ from user user0_ where user0_.user_id=?
[2021-07-27 17:54:20] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[2021-07-27 17:54:20] - Resolving attributes for [com.anu.springunijpa.entity.User#6]
[2021-07-27 17:54:20] - Processing attribute `dOB` : value = 2002-02-10
[2021-07-27 17:54:20] - Attribute (`dOB`)  - enhanced for lazy-loading? - false
[2021-07-27 17:54:20] - Processing attribute `userCourseSet` : value = NOT NULL COLLECTION
[2021-07-27 17:54:20] - Attribute (`userCourseSet`)  - enhanced for lazy-loading? - false
[2021-07-27 17:54:20] - Processing attribute `userName` : value = Sara
[2021-07-27 17:54:20] - Attribute (`userName`)  - enhanced for lazy-loading? - false
[2021-07-27 17:54:20] - Processing attribute `userTel` : value = 726098756
[2021-07-27 17:54:20] - Attribute (`userTel`)  - enhanced for lazy-loading? - false
[2021-07-27 17:54:20] - Done materializing entity [com.anu.springunijpa.entity.User#6]
[2021-07-27 17:54:20] - Done entity load : com.anu.springunijpa.entity.User#6
[2021-07-27 17:54:20] - Initiating transaction commit
[2021-07-27 17:54:20] - Committing JPA transaction on EntityManager [SessionImpl(371974897<open>)]
[2021-07-27 17:54:20] - committing
[2021-07-27 17:54:20] - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2082612594 wrapping com.mysql.cj.jdbc.ConnectionImpl@3a209918]
[2021-07-27 17:54:20] - Closing JPA EntityManager [SessionImpl(371974897<open>)] after transaction
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' field '/findUser' fetch returned 'com.anu.springunijpa.entity.User'
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' completing field '/findUser'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' fetching field '/findUser/userId' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' field '/findUser/userId' fetch returned 'java.lang.Integer'
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' completing field '/findUser/userId'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' fetching field '/findUser/userName' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' field '/findUser/userName' fetch returned 'java.lang.String'
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' completing field '/findUser/userName'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' fetching field '/findUser/dOB' using data fetcher 'com.coxautodev.graphql.tools.PropertyFieldResolverDataFetcher'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' field '/findUser/dOB' fetch returned 'java.time.LocalDate'
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' completing field '/findUser/dOB'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' fetching field '/findUser/userTel' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' field '/findUser/userTel' fetch returned 'java.lang.String'
[2021-07-27 17:54:20] - '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' completing field '/findUser/userTel'...
[2021-07-27 17:54:20] - Execution '683ffbea-a5c4-4f63-bdc4-7d83eb4e6553' completed with zero errors
[2021-07-27 17:54:35] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-07-27 17:54:35] - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-07-27 17:54:37] - Executing request. operation name: 'null'. query: 'query {
    findUserByName(userName:"Kate"){
        userId
        userName
        dOB
        userTel
    }
}'. variables '{}'
[2021-07-27 17:54:37] - Parsing query: 'query {
    findUserByName(userName:"Kate"){
        userId
        userName
        dOB
        userTel
    }
}'...
[2021-07-27 17:54:37] - Validating query: 'query {
    findUserByName(userName:"Kate"){
        userId
        userName
        dOB
        userTel
    }
}'
[2021-07-27 17:54:37] - Executing '8e2bebed-fa0d-417f-85d3-b5aecd0b1c7f'. operation name: 'null'. query: 'query {
    findUserByName(userName:"Kate"){
        userId
        userName
        dOB
        userTel
    }
}'. variables '{}'
[2021-07-27 17:54:37] - Executing '8e2bebed-fa0d-417f-85d3-b5aecd0b1c7f' query operation: 'QUERY' using 'graphql.execution.AsyncExecutionStrategy' execution strategy
[2021-07-27 17:54:37] - '8e2bebed-fa0d-417f-85d3-b5aecd0b1c7f' fetching field '/findUserByName' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-27 17:54:37] - Creating new EntityManager for shared EntityManager invocation
[2021-07-27 17:54:37] - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[2021-07-27 17:54:37] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4d1def97
[2021-07-27 17:54:37] - parse() - HQL: select generatedAlias0 from com.anu.springunijpa.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[2021-07-27 17:54:37] - throwQueryException() : no errors
[2021-07-27 17:54:37] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'anu'
    |  |     |  |  |  \-[IDENT] Node: 'springunijpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[2021-07-27 17:54:37] - select << begin [level=1, statement=select]
[2021-07-27 17:54:37] - FromClause{level=1} : com.anu.springunijpa.entity.User (generatedAlias0) -> user0_
[2021-07-27 17:54:37] - Resolved : generatedAlias0 -> user0_.user_id
[2021-07-27 17:54:37] - Resolved : generatedAlias0 -> user0_.user_id
[2021-07-27 17:54:37] - getDataType() : userName -> org.hibernate.type.StringType@267f9765
[2021-07-27 17:54:37] - Resolved : generatedAlias0.userName -> user0_.user_name
[2021-07-27 17:54:37] - select : finishing up [level=1, statement=select]
[2021-07-27 17:54:37] - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.user_name user0_.user_id userName ) ? ) ) )
[2021-07-27 17:54:37] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.anu.springunijpa.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.anu.springunijpa.entity.User)
          | path: generatedAlias0.userName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.anu.springunijpa.entity.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: userName
          \-ParameterNode

[2021-07-27 17:54:37] - Using FROM fragment [user user0_]
[2021-07-27 17:54:37] - select >> end [level=1, statement=select]
[2021-07-27 17:54:37] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.anu.springunijpa.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.date_of_birth as date_of_2_1_, user0_.user_name as user_nam3_1_, user0_.user_tel as user_tel4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.anu.springunijpa.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.anu.springunijpa.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.anu.springunijpa.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@267f9765}

[2021-07-27 17:54:37] - throwQueryException() : no errors
[2021-07-27 17:54:37] - HQL: select generatedAlias0 from com.anu.springunijpa.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[2021-07-27 17:54:37] - SQL: select user0_.user_id as user_id1_1_, user0_.date_of_birth as date_of_2_1_, user0_.user_name as user_nam3_1_, user0_.user_tel as user_tel4_1_ from user user0_ where user0_.user_name=?
[2021-07-27 17:54:37] - throwQueryException() : no errors
[2021-07-27 17:54:37] - select user0_.user_id as user_id1_1_, user0_.date_of_birth as date_of_2_1_, user0_.user_name as user_nam3_1_, user0_.user_tel as user_tel4_1_ from user user0_ where user0_.user_name=?
[2021-07-27 17:54:37] - Result set row: 0
[2021-07-27 17:54:37] - Result row: EntityKey[com.anu.springunijpa.entity.User#3]
[2021-07-27 17:54:37] - Resolving attributes for [com.anu.springunijpa.entity.User#3]
