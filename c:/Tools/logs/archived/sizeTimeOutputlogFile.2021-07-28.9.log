[2021-07-28 08:41:25] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-07-28 08:41:25] - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-07-28 08:41:50] - Executing request. operation name: 'null'. query: 'query {
    findCourseByName(courseName:"Java"){
        courseId
        courseName
        courseLeader
    }
}'. variables '{}'
[2021-07-28 08:41:50] - Parsing query: 'query {
    findCourseByName(courseName:"Java"){
        courseId
        courseName
        courseLeader
    }
}'...
[2021-07-28 08:41:50] - Validating query: 'query {
    findCourseByName(courseName:"Java"){
        courseId
        courseName
        courseLeader
    }
}'
[2021-07-28 08:41:50] - Executing '07358b1c-6666-47ad-964f-784985eb9684'. operation name: 'null'. query: 'query {
    findCourseByName(courseName:"Java"){
        courseId
        courseName
        courseLeader
    }
}'. variables '{}'
[2021-07-28 08:41:50] - Executing '07358b1c-6666-47ad-964f-784985eb9684' query operation: 'QUERY' using 'graphql.execution.AsyncExecutionStrategy' execution strategy
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' fetching field '/findCourseByName' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-28 08:41:50] - Creating new EntityManager for shared EntityManager invocation
[2021-07-28 08:41:50] - Rendered criteria query -> select generatedAlias0 from Course as generatedAlias0 where generatedAlias0.courseName=:param0
[2021-07-28 08:41:50] - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6748b07b
[2021-07-28 08:41:50] - parse() - HQL: select generatedAlias0 from com.anu.springunijpa.entity.Course as generatedAlias0 where generatedAlias0.courseName=:param0
[2021-07-28 08:41:50] - throwQueryException() : no errors
[2021-07-28 08:41:50] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'anu'
    |  |     |  |  |  \-[IDENT] Node: 'springunijpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Course'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'courseName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[2021-07-28 08:41:50] - select << begin [level=1, statement=select]
[2021-07-28 08:41:50] - FromClause{level=1} : com.anu.springunijpa.entity.Course (generatedAlias0) -> course0_
[2021-07-28 08:41:50] - Resolved : generatedAlias0 -> course0_.course_id
[2021-07-28 08:41:50] - Resolved : generatedAlias0 -> course0_.course_id
[2021-07-28 08:41:50] - getDataType() : courseName -> org.hibernate.type.StringType@5e002356
[2021-07-28 08:41:50] - Resolved : generatedAlias0.courseName -> course0_.course_name
[2021-07-28 08:41:50] - select : finishing up [level=1, statement=select]
[2021-07-28 08:41:50] - processQuery() :  ( SELECT ( {select clause} course0_.course_id ) ( FromClause{level=1} course course0_ ) ( where ( = ( course0_.course_name course0_.course_id courseName ) ? ) ) )
[2021-07-28 08:41:50] - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Course): [course]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.anu.springunijpa.entity.Course)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.anu.springunijpa.entity.Course)
          | path: generatedAlias0.courseName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.anu.springunijpa.entity.Course)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: courseName
          \-ParameterNode

[2021-07-28 08:41:50] - Using FROM fragment [course course0_]
[2021-07-28 08:41:50] - select >> end [level=1, statement=select]
[2021-07-28 08:41:50] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'course0_.course_id as course_i1_0_' {alias=generatedAlias0, className=com.anu.springunijpa.entity.Course, tableAlias=course0_}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.course_leader as course_l2_0_, course0_.course_name as course_n3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=course,tableAlias=course0_,origin=null,columns={,className=com.anu.springunijpa.entity.Course}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'course0_.course_name' {propertyName=courseName,dereferenceType=PRIMITIVE,getPropertyPath=courseName,path=generatedAlias0.courseName,tableAlias=course0_,className=com.anu.springunijpa.entity.Course,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'course0_.course_id' {alias=generatedAlias0, className=com.anu.springunijpa.entity.Course, tableAlias=course0_}
          |  \-[IDENT] IdentNode: 'courseName' {originalText=courseName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5e002356}

[2021-07-28 08:41:50] - throwQueryException() : no errors
[2021-07-28 08:41:50] - HQL: select generatedAlias0 from com.anu.springunijpa.entity.Course as generatedAlias0 where generatedAlias0.courseName=:param0
[2021-07-28 08:41:50] - SQL: select course0_.course_id as course_i1_0_, course0_.course_leader as course_l2_0_, course0_.course_name as course_n3_0_ from course course0_ where course0_.course_name=?
[2021-07-28 08:41:50] - throwQueryException() : no errors
[2021-07-28 08:41:50] - select course0_.course_id as course_i1_0_, course0_.course_leader as course_l2_0_, course0_.course_name as course_n3_0_ from course course0_ where course0_.course_name=?
[2021-07-28 08:41:50] - Result set row: 0
[2021-07-28 08:41:50] - Result row: EntityKey[com.anu.springunijpa.entity.Course#c1]
[2021-07-28 08:41:50] - Resolving attributes for [com.anu.springunijpa.entity.Course#c1]
[2021-07-28 08:41:50] - Processing attribute `courseLeader` : value = Mr.Java
[2021-07-28 08:41:50] - Attribute (`courseLeader`)  - enhanced for lazy-loading? - false
[2021-07-28 08:41:50] - Processing attribute `courseName` : value = java
[2021-07-28 08:41:50] - Attribute (`courseName`)  - enhanced for lazy-loading? - false
[2021-07-28 08:41:50] - Processing attribute `userCourseSet` : value = NOT NULL COLLECTION
[2021-07-28 08:41:50] - Attribute (`userCourseSet`)  - enhanced for lazy-loading? - false
[2021-07-28 08:41:50] - Done materializing entity [com.anu.springunijpa.entity.Course#c1]
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' field '/findCourseByName' fetch returned 'com.anu.springunijpa.entity.Course'
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' completing field '/findCourseByName'...
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' fetching field '/findCourseByName/courseId' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' field '/findCourseByName/courseId' fetch returned 'java.lang.String'
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' completing field '/findCourseByName/courseId'...
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' fetching field '/findCourseByName/courseName' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' field '/findCourseByName/courseName' fetch returned 'java.lang.String'
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' completing field '/findCourseByName/courseName'...
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' fetching field '/findCourseByName/courseLeader' using data fetcher 'com.coxautodev.graphql.tools.MethodFieldResolverDataFetcher'...
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' field '/findCourseByName/courseLeader' fetch returned 'java.lang.String'
[2021-07-28 08:41:50] - '07358b1c-6666-47ad-964f-784985eb9684' completing field '/findCourseByName/courseLeader'...
[2021-07-28 08:41:50] - Execution '07358b1c-6666-47ad-964f-784985eb9684' completed with zero errors
[2021-07-28 08:41:55] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-07-28 08:41:55] - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-07-28 08:41:56] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2021-07-28 08:41:56] - Initializing Servlet 'dispatcherServlet'
[2021-07-28 08:41:56] - Detected StandardServletMultipartResolver
[2021-07-28 08:41:56] - Detected AcceptHeaderLocaleResolver
[2021-07-28 08:41:56] - Detected FixedThemeResolver
[2021-07-28 08:41:56] - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1755aee6
[2021-07-28 08:41:56] - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4e35a219
[2021-07-28 08:41:56] - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2021-07-28 08:41:56] - Completed initialization in 1 ms
[2021-07-28 08:41:56] - GET "/users/search?searchtype=name&search=kate", parameters={masked}
[2021-07-28 08:41:56] - Mapped to com.anu.springunijpa.controller.UserController#searchByAny(String, String)
[2021-07-28 08:41:56] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
[2021-07-28 08:41:56] - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( ( generatedAlias0.userId=:param0 ) or ( generatedAlias0.userName=:param1 ) ) or ( generatedAlias0.userTel is null )
[2021-07-28 08:41:56] - parse() - HQL: select generatedAlias0 from com.anu.springunijpa.entity.User as generatedAlias0 where ( ( generatedAlias0.userId=:param0 ) or ( generatedAlias0.userName=:param1 ) ) or ( generatedAlias0.userTel is null )
[2021-07-28 08:41:56] - throwQueryException() : no errors
[2021-07-28 08:41:56] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'anu'
    |  |     |  |  |  \-[IDENT] Node: 'springunijpa'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'userId'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'userName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[IS_NULL] Node: 'is null'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'generatedAlias0'
                \-[IDENT] Node: 'userTel'

[2021-07-28 08:41:56] - select << begin [level=1, statement=select]
[2021-07-28 08:41:56] - FromClause{level=1} : com.anu.springunijpa.entity.User (generatedAlias0) -> user0_
[2021-07-28 08:41:56] - Resolved : generatedAlias0 -> user0_.user_id
[2021-07-28 08:41:56] - Resolved : generatedAlias0 -> user0_.user_id
[2021-07-28 08:41:56] - getDataType() : userId -> org.hibernate.type.IntegerType@49edcb30
[2021-07-28 08:41:56] - Resolved : generatedAlias0.userId -> user0_.user_id
[2021-07-28 08:41:56] - Resolved : generatedAlias0 -> user0_.user_id
[2021-07-28 08:41:56] - getDataType() : userName -> org.hibernate.type.StringType@5e002356
[2021-07-28 08:41:56] - Resolved : generatedAlias0.userName -> user0_.user_name
