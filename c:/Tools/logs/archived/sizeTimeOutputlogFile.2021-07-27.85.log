[2021-07-27 16:19:28] - Adding type registration short -> org.hibernate.type.ShortType@4bc6da03
[2021-07-27 16:19:28] - Adding type registration short -> org.hibernate.type.ShortType@4bc6da03
[2021-07-27 16:19:28] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bc6da03
[2021-07-27 16:19:28] - Adding type registration integer -> org.hibernate.type.IntegerType@5f0a2638
[2021-07-27 16:19:28] - Adding type registration int -> org.hibernate.type.IntegerType@5f0a2638
[2021-07-27 16:19:28] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f0a2638
[2021-07-27 16:19:28] - Adding type registration long -> org.hibernate.type.LongType@7b5cc918
[2021-07-27 16:19:28] - Adding type registration long -> org.hibernate.type.LongType@7b5cc918
[2021-07-27 16:19:28] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b5cc918
[2021-07-27 16:19:28] - Adding type registration float -> org.hibernate.type.FloatType@422ad5e2
[2021-07-27 16:19:28] - Adding type registration float -> org.hibernate.type.FloatType@422ad5e2
[2021-07-27 16:19:28] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@422ad5e2
[2021-07-27 16:19:28] - Adding type registration double -> org.hibernate.type.DoubleType@3249e278
[2021-07-27 16:19:28] - Adding type registration double -> org.hibernate.type.DoubleType@3249e278
[2021-07-27 16:19:28] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3249e278
[2021-07-27 16:19:28] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2047981
[2021-07-27 16:19:28] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2047981
[2021-07-27 16:19:28] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@235c997d
[2021-07-27 16:19:28] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@235c997d
[2021-07-27 16:19:28] - Adding type registration string -> org.hibernate.type.StringType@1b7f06c7
[2021-07-27 16:19:28] - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b7f06c7
[2021-07-27 16:19:28] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23c767e6
[2021-07-27 16:19:28] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@29079032
[2021-07-27 16:19:28] - Adding type registration url -> org.hibernate.type.UrlType@316cda31
[2021-07-27 16:19:28] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@316cda31
[2021-07-27 16:19:28] - Adding type registration Duration -> org.hibernate.type.DurationType@315c081
[2021-07-27 16:19:28] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@315c081
[2021-07-27 16:19:28] - Adding type registration Instant -> org.hibernate.type.InstantType@7a2fce12
[2021-07-27 16:19:28] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7a2fce12
[2021-07-27 16:19:28] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41bfa9e9
[2021-07-27 16:19:28] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41bfa9e9
[2021-07-27 16:19:28] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d6ac396
[2021-07-27 16:19:28] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d6ac396
[2021-07-27 16:19:28] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@100ad67e
[2021-07-27 16:19:28] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@100ad67e
[2021-07-27 16:19:28] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@319642db
[2021-07-27 16:19:28] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@319642db
[2021-07-27 16:19:28] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4ea17147
[2021-07-27 16:19:28] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4ea17147
[2021-07-27 16:19:28] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@445821a6
[2021-07-27 16:19:28] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@445821a6
[2021-07-27 16:19:28] - Adding type registration date -> org.hibernate.type.DateType@35dece42
[2021-07-27 16:19:28] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@35dece42
[2021-07-27 16:19:28] - Adding type registration time -> org.hibernate.type.TimeType@5d05f453
[2021-07-27 16:19:28] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d05f453
[2021-07-27 16:19:28] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d508d22
[2021-07-27 16:19:28] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d508d22
[2021-07-27 16:19:28] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d508d22
[2021-07-27 16:19:28] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7da635c0
[2021-07-27 16:19:28] - Adding type registration calendar -> org.hibernate.type.CalendarType@3292d91a
[2021-07-27 16:19:28] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3292d91a
[2021-07-27 16:19:28] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3292d91a
[2021-07-27 16:19:28] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@69f2cb04
[2021-07-27 16:19:28] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@168ad26f
[2021-07-27 16:19:28] - Adding type registration locale -> org.hibernate.type.LocaleType@61191222
[2021-07-27 16:19:28] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61191222
[2021-07-27 16:19:28] - Adding type registration currency -> org.hibernate.type.CurrencyType@401c4250
[2021-07-27 16:19:28] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@401c4250
[2021-07-27 16:19:28] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16d07cf3
[2021-07-27 16:19:28] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16d07cf3
[2021-07-27 16:19:28] - Adding type registration class -> org.hibernate.type.ClassType@385dfb63
[2021-07-27 16:19:28] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@385dfb63
[2021-07-27 16:19:28] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2233cac0
[2021-07-27 16:19:28] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2233cac0
[2021-07-27 16:19:28] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3fcbc766
[2021-07-27 16:19:28] - Adding type registration binary -> org.hibernate.type.BinaryType@6e02721d
[2021-07-27 16:19:28] - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e02721d
[2021-07-27 16:19:28] - Adding type registration [B -> org.hibernate.type.BinaryType@6e02721d
[2021-07-27 16:19:28] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5fdfe8cf
[2021-07-27 16:19:28] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5fdfe8cf
[2021-07-27 16:19:28] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5fdfe8cf
[2021-07-27 16:19:28] - Adding type registration row_version -> org.hibernate.type.RowVersionType@31723307
[2021-07-27 16:19:28] - Adding type registration image -> org.hibernate.type.ImageType@a85644c
[2021-07-27 16:19:28] - Adding type registration characters -> org.hibernate.type.CharArrayType@515b9d4a
[2021-07-27 16:19:28] - Adding type registration char[] -> org.hibernate.type.CharArrayType@515b9d4a
[2021-07-27 16:19:28] - Adding type registration [C -> org.hibernate.type.CharArrayType@515b9d4a
[2021-07-27 16:19:28] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@196624bf
[2021-07-27 16:19:28] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@196624bf
[2021-07-27 16:19:28] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@196624bf
[2021-07-27 16:19:28] - Adding type registration text -> org.hibernate.type.TextType@4b425577
[2021-07-27 16:19:28] - Adding type registration ntext -> org.hibernate.type.NTextType@4f3e9fbb
[2021-07-27 16:19:28] - Adding type registration blob -> org.hibernate.type.BlobType@7fdd43cd
[2021-07-27 16:19:28] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fdd43cd
[2021-07-27 16:19:28] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@9b47400
[2021-07-27 16:19:28] - Adding type registration clob -> org.hibernate.type.ClobType@64ae105d
[2021-07-27 16:19:28] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@64ae105d
[2021-07-27 16:19:28] - Adding type registration nclob -> org.hibernate.type.NClobType@2b80e5a9
[2021-07-27 16:19:28] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b80e5a9
[2021-07-27 16:19:28] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ac6dd3d
[2021-07-27 16:19:28] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d5c41e5
[2021-07-27 16:19:28] - Adding type registration serializable -> org.hibernate.type.SerializableType@22825e1e
[2021-07-27 16:19:28] - Adding type registration object -> org.hibernate.type.ObjectType@79a201cf
[2021-07-27 16:19:28] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@79a201cf
[2021-07-27 16:19:28] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30c19bff
[2021-07-27 16:19:28] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e375bba
[2021-07-27 16:19:28] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ab2e6d2
[2021-07-27 16:19:28] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71664560
[2021-07-27 16:19:28] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d4436d0
[2021-07-27 16:19:28] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39da5e49
[2021-07-27 16:19:28] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2443abd6
[2021-07-27 16:19:28] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@674da77b
[2021-07-27 16:19:28] - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@188a5fc2] into BootstrapContext; was [null]
[2021-07-27 16:19:28] - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@188a5fc2) [was null]
[2021-07-27 16:19:28] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@415d88de] into BootstrapContext; was [null]
[2021-07-27 16:19:28] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@a0bf272] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4a89ef44]
[2021-07-27 16:19:28] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@188a5fc2]
[2021-07-27 16:19:28] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@188a5fc2]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-07-27 16:19:28] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-07-27 16:19:28] - Creating new JDBC Driver Connection to [jdbc:h2:mem:546ca4c5-7eaf-4076-8fa4-7a6be327f710;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]
[2021-07-27 16:19:28] - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-07-27 16:19:28] - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-07-27 16:19:28] - JDBC version : 4.1
[2021-07-27 16:19:28] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2021-07-27 16:19:28] - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-07-27 16:19:28] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-07-27 16:19:28] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a1568d6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11c88cca]
[2021-07-27 16:19:28] - Binding entity from annotated class: com.anu.springunijpa.entity.Course
[2021-07-27 16:19:28] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-07-27 16:19:28] - Import with entity name Course
[2021-07-27 16:19:28] - Bind entity com.anu.springunijpa.entity.Course on table course
[2021-07-27 16:19:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(course), mappingColumn=course_id, insertable=true, updatable=true, unique=false}
[2021-07-27 16:19:28] - Not known whether passed class name [com.anu.springunijpa.entity.Course] is safe
[2021-07-27 16:19:28] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.anu.springunijpa.entity.Course
[2021-07-27 16:19:28] - MetadataSourceProcessor property courseId with lazy=false
[2021-07-27 16:19:28] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.Course:courseId]
[2021-07-27 16:19:28] - building SimpleValue for courseId
[2021-07-27 16:19:28] - Building property courseId
[2021-07-27 16:19:28] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(course_id)]), courseId, assigned, , ...)
[2021-07-27 16:19:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(course), mappingColumn=course_leader, insertable=true, updatable=true, unique=false}
[2021-07-27 16:19:28] - MetadataSourceProcessor property courseLeader with lazy=false
[2021-07-27 16:19:28] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.Course:courseLeader]
[2021-07-27 16:19:28] - building SimpleValue for courseLeader
[2021-07-27 16:19:28] - Building property courseLeader
[2021-07-27 16:19:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(course), mappingColumn=course_name, insertable=true, updatable=true, unique=false}
[2021-07-27 16:19:28] - MetadataSourceProcessor property courseName with lazy=false
[2021-07-27 16:19:28] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.Course:courseName]
[2021-07-27 16:19:28] - building SimpleValue for courseName
[2021-07-27 16:19:28] - Building property courseName
[2021-07-27 16:19:28] - Binding entity from annotated class: com.anu.springunijpa.entity.User
[2021-07-27 16:19:28] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-07-27 16:19:28] - Import with entity name User
[2021-07-27 16:19:28] - Bind entity com.anu.springunijpa.entity.User on table user
[2021-07-27 16:19:28] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-07-27 16:19:28] - Not known whether passed class name [com.anu.springunijpa.entity.User] is safe
[2021-07-27 16:19:28] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.anu.springunijpa.entity.User
[2021-07-27 16:19:28] - MetadataSourceProcessor property userId with lazy=false
[2021-07-27 16:19:28] - Attempting to locate auto-apply AttributeConverter for property [com.anu.springunijpa.entity.User:userId]
